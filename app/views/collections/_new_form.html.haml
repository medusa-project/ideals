-# frozen_string_literal: true
-#
-# Required arguments:
-#
-# primary_unit [Unit]
-# parent [Collection] Optional.

- parent = nil unless defined?(:parent)

= form_for(Collection.new, remote: true) do |f|
  .error-messages
    -# populated via ajax by shared/_validation_messages.js.erb

  -# needed only because collection is required by the params
  = f.hidden_field :metadata_profile_id, value: f.object.metadata_profile_id

  = hidden_field_tag :primary_unit_id, primary_unit.id
  - if parent
    = f.hidden_field :parent_id, value: parent.id

  .form-group
    = label_tag "elements_#{::Configuration.instance.elements[:title]}", "Title"
    = text_field_tag "elements[#{::Configuration.instance.elements[:title]}]",
                     nil, class: "form-control"

  .form-group
    = label_tag "elements_#{::Configuration.instance.elements[:description]}", "Description"
    = text_area_tag "elements[#{::Configuration.instance.elements[:description]}]",
                    nil, class: "form-control"

  .clearfix
    .float-right
      %button.btn.btn-light{"data-dismiss": "modal", type: "button"} Cancel
      = f.submit("Create", class: 'btn btn-primary')
