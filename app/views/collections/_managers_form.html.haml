-# frozen_string_literal: true
-#
-# Required locals:
-#
-# collection [Collection]
-#
= form_for(collection, remote: true) do |f|
  .error-messages
    -# populated via ajax by shared/_validation_messages.js.erb

  -# `collection` is required in the params (but this attribute is not permitted)
  = f.hidden_field :id, value: f.object.id

  %h5 Groups

  .form-group
    = hidden_field_tag "managing_user_group_ids[]"
    - UserGroup.order(:name).each do |user_group|
      .form-check
        = check_box_tag "managing_user_group_ids[]", user_group.id,
                        f.object.manager_groups.where(user_group: user_group).any?,
                        { id: "managing_user_group_ids_#{user_group.id}", class: "form-check-input" }
        = label_tag "managing_user_group_ids_#{user_group.id}",
          user_group.name, class: "form-check-label"

  %hr

  %h5 Users

  .form-group
    - user_strings = f.object.managing_users.each.map(&:to_autocomplete)
    - user_strings << "" if user_strings.empty?
    - user_strings.each do |user_str|
      .input-group.mb-3.user
        = text_field_tag "managers[]", user_str,
                         autocomplete: "off",
                         class: "form-control"
        .input-group-append
          %button.btn.btn-sm.btn-outline-danger.remove{type: "button"}
            %i.fa.fa-minus
            Remove
        .dropdown-menu
          - # populated by javascript
    %button.btn.btn-sm.btn-outline-success.add
      %i.fa.fa-plus
      Add User

  .clearfix
    .float-right
      %button.btn.btn-light{"data-dismiss": "modal", type: "button"} Cancel
      = f.submit "Edit", class: "btn btn-primary"
