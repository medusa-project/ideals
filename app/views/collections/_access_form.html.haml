-# frozen_string_literal: true
//
// Required arguments:
//
// collection [Collection]
//
= form_for(collection, remote: true) do |f|
  .error-messages
    - # populated via ajax by shared/_validation_messages.js.erb

  - # `collection` is required in the params
  = f.hidden_field :primary_unit_id, value: f.object.primary_unit_id

  .form-group
    %h5 Managers
    - user_strings = f.object.managing_users.each.map(&:to_autocomplete)
    - user_strings << "" if user_strings.empty?
    - user_strings.each do |user_str|
      .input-group.mb-3.user
        = text_field_tag "managers[]", user_str,
                         autocomplete: "off",
                         class: "form-control"
        .input-group-append
          %button.btn.btn-sm.btn-outline-danger.remove{type: "button"}
            %i.fa.fa-minus
            Remove
        .dropdown-menu
          - # populated by javascript
    %button.btn.btn-sm.btn-outline-success.add
      %i.fa.fa-plus
      Add Submitter

  %hr

  .form-group
    %h5 Submitters
    - user_strings = f.object.submitting_users.each.map(&:to_autocomplete)
    - user_strings << "" if user_strings.empty?
    - user_strings.each do |user_str|
      .input-group.mb-3.user
        = text_field_tag "submitters[]", user_str,
                         autocomplete: "off",
                         class: "form-control"
        .input-group-append
          %button.btn.btn-sm.btn-outline-danger.remove{type: "button"}
            %i.fa.fa-minus
            Remove
        .dropdown-menu
          - # populated by javascript
    %button.btn.btn-sm.btn-outline-success.add
      %i.fa.fa-plus
      Add Submitter

  .clearfix
    .float-right
      %button.btn.btn-light{"data-dismiss": "modal", type: "button"} Cancel
      = f.submit("Edit", class: "btn btn-primary")
