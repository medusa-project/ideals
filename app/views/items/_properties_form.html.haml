-# frozen_string_literal: true
-#
-# Required arguments:
-#
-# item [Item]
-#

= form_for(item, remote: true) do |f|
  .error-messages
    -# populated via ajax by shared/_validation_messages.js.erb

  .form-group
    = f.label :stage, "Lifecycle Stage"
    = f.select(:stage,
               Item::Stages.constants.map{ |s| [s.to_s.downcase.capitalize, Item::Stages::const_get(s)]}.sort_by{ |s| s[1] },
               { selected: f.object.stage },
               class: 'custom-select')

  .form-group
    .form-check
      = f.check_box :discoverable, class: "form-check-input"
      = f.label :discoverable, class: "form-check-label"

  .clearfix
    .float-right
      %button.btn.btn-light{"data-dismiss": "modal", type: "button"} Cancel
      = f.submit("Edit", class: 'btn btn-primary')
