-# Accepts the following locals:
-#
-# bitstream [Bitstream]
-# show_sysadmin_content [Boolean]
-#

.card.mb-3
  .card-body
    .float-right
      .btn-group{role: "group"}
        - if policy(bitstream).download?
          = link_to(item_bitstream_object_path(bitstream.item, bitstream), class: "btn btn-sm btn-success") do
            %i.fa.fa-download
            Download (
            = number_to_human_size(bitstream.length)
            )
        - if show_sysadmin_content
          %button.btn.btn-sm.btn-light.edit-bitstream{"data-item-id":      bitstream.item_id,
                                                      "data-bitstream-id": bitstream.id,
                                                      "data-target":       "#edit-bitstream-modal",
                                                      "data-toggle":       "modal",
                                                      type:                "button"}
            %i.fas.fa-pencil-alt
            Edit
    %h5.card-title
      = icon_for(bitstream)
      = bitstream.original_filename

    .row
      .col-sm-2.my-auto
        -# N.B.: the size should be at least 2x the value of $thumb_size in
        -# items.scss to support high-DPI displays.
        = representative_image_tag(bitstream, size: 256)
      .col-sm-10
        %dl.files.mb-0.mt-3
          %dt Download Count
          %dd= number_with_delimiter(bitstream.download_count)
          - if show_sysadmin_content
            %dt Database ID
            %dd= bitstream.id
          %dt Bundle
          %dd= Bitstream::Bundle.label(bitstream.bundle)
          - if bitstream.exists_in_staging && bitstream.staging_key
            %dt Staging Key
            %dd
              %code= bitstream.staging_key
          - else
            %dt Exists in Staging
            %dd= boolean(false, style: :word)
          %dt Submitted For Ingest
          %dd= boolean(bitstream.submitted_for_ingest, style: :word)
          - if bitstream.medusa_uuid
            %dt Medusa UUID
            %dd= link_to(bitstream.medusa_uuid, bitstream.medusa_url)
            %dt Medusa Key
            %dd bitstream.medusa_key
          - else
            %dt Exists in Medusa
            %dd= boolean(false, style: :word)
            %dt Minimum Access Role
            %dd= Role.label(bitstream.role)
