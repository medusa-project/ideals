- can_approve  = policy(@item).approve?
- can_withdraw = policy(@item).withdraw?
- can_reject   = policy(@item).reject?
- can_bury     = policy(@item).bury?
- can_destroy  = policy(@item).destroy?
- can_exhume   = policy(@item).exhume?
- show_approve_button  = (@item.submitted? || @item.withdrawn?) && can_approve
- show_reject_button   = !@item.withdrawn? && can_reject
- show_withdraw_button = @item.approved? && can_withdraw
- show_delete_button   = !@item.buried? && can_bury
- show_destroy_button  = can_destroy
- show_undelete_button = @item.buried? && can_exhume

.btn-group.float-end{role: "group"}
  -# Actions menu
  - if show_approve_button || show_reject_button || show_withdraw_button || show_delete_button || show_destroy_button || show_undelete_button
    .btn-group{role: "group"}
      %button#actions.btn.btn-light.dropdown-toggle{"aria-expanded":  "false",
                                                    "aria-haspopup":  "true",
                                                    "data-bs-toggle": "dropdown",
                                                    type:             "button"}
        %i.fa.fa-ellipsis-h
        Actions
        .dropdown-menu.dropdown-menu-right{"aria-labelledby": "actions"}
          - if show_approve_button
            = link_to(item_approve_path(@item), class:          "dropdown-item",
                                                method:         :patch,
                                                "data-confirm": "Are you sure you want to approve this item?") do
              %i.fa.fa-check
              Approve
            - if show_reject_button
              = link_to(item_reject_path(@item), class:          "dropdown-item",
                                                 method:         :patch,
                                                 "data-confirm": "Are you sure you want to reject this item?") do
                %i.fa.fa-times
                Reject
          - elsif show_withdraw_button
            %a.dropdown-item.withdraw{"data-bs-toggle": "modal",
                                      href:             "#",
                                      "data-item-id":   @item.id,
                                      "data-bs-target": "#withdraw-modal"}
              %i.fa.fa-undo
              Withdraw
          - if show_delete_button
            = link_to(item_bury_path(@item), class:          "dropdown-item",
                                             method:         :post,
                                             "data-confirm": "Are you sure you want to delete this item? This operation is reversible. If you would prefer to delete it permanently, please contact a system administrator.") do
              %i.fa.fa-trash
              Delete
          - if show_destroy_button
            = link_to(item_path(@item), class:          "dropdown-item",
                                        method:         :delete,
                                        "data-confirm": "Are you sure you want to permanently delete this item? This cannot be undone.") do
              %i.fa.fa-trash
              Delete Permanently
          - if show_undelete_button
            = link_to(item_exhume_path(@item), class:          "dropdown-item",
                                               method:         :post,
                                               "data-confirm": "Are you sure you want to undelete this item?") do
              %i.fa.fa-trash-restore
              Undelete

  -# Manage Files button
  - if policy(@item).upload_bitstreams? && !@item.withdrawn?
    %button.btn.btn-light.manage-item-files{"data-item-id":   @item.id,
                                            "data-bs-target": "#manage-item-files-modal",
                                            "data-bs-toggle": "modal",
                                            role:             "button"}
      %i.fas.fa-upload
      Manage Files&hellip;

= render partial: "shared/xhr_modal",
         locals: { id: "withdraw-modal",
                   title: "Withdraw" }
