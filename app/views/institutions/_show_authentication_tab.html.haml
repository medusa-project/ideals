%ul.nav.nav-tabs{role: "tablist"}
  %li.nav-item{role: "presentation"}
    %button#local-tab.nav-link.active{"data-bs-toggle": "tab",
                                      "data-bs-target": "#local-tab-pane",
                                      type:             "button",
                                      role:             "tab",
                                      "aria-controls":  "local-tab-pane",
                                      "aria-selected":  "true"} Local
  %li.nav-item{role: "presentation"}
    %button#saml-tab.nav-link{"data-bs-toggle": "tab",
                              "data-bs-target": "#saml-tab-pane",
                              type:             "button",
                              role:             "tab",
                              "aria-controls":  "saml-tab-pane",
                              "aria-selected":  "false"} SAML
  - if @institution.key == "uiuc"
    %li.nav-item{role: "presentation"}
      %button#shibboleth-tab.nav-link{"data-bs-toggle": "tab",
                                      "data-bs-target": "#shibboleth-tab-pane",
                                      type:             "button",
                                      role:             "tab",
                                      "aria-controls":  "shibboleth-tab-pane",
                                      "aria-selected":  "true"} Shibboleth

.tab-content
  #local-tab-pane.tab-pane.fade.show.active{role:              "tabpanel",
                                            "aria-labelledby": "local-tab",
                                            tabindex:          "0"}
    - if policy(@institution).edit_local_authentication?
      .btn-group.float-end{role: "group"}
        -# Edit button
        %button.btn.btn-light.edit-local-authentication{"data-bs-target":       "#edit-local-authentication-modal",
                                                        "data-bs-toggle":       "modal",
                                                        type:                   "button",
                                                        "data-institution-key": @institution.key }
          %i.fa.fa-pencil-alt
          Edit

    .clearfix.mb-3

    %dl
      %dt Enabled
      %dd
        = boolean(@institution.local_auth_enabled, style: :word)

  #saml-tab-pane.tab-pane.fade{role:              "tabpanel",
                               "aria-labelledby": "saml-tab",
                               tabindex:          "0"}
    - if policy(@institution).edit_saml_authentication?
      .btn-group.float-end{role: "group"}
        .btn-group{role: "group"}
          %button.btn.btn-light.dropdown-toggle{type:             "button",
                                                "data-bs-toggle": "dropdown",
                                                "aria-expanded":  false}
            Actions
          .dropdown-menu
            - if @institution.sso_federation.present? && @institution.sso_federation != Institution::SSOFederation::NONE
              -# Refresh Configuration Metadata button
              = link_to(institution_refresh_saml_config_metadata_path(@institution),
                        class: "dropdown-item", method: :patch) do
                %i.fa.fa-sync
                Refresh Configuration Metadata
            -# Generate SP Private Key button
            = link_to(institution_generate_saml_key_path(@institution),
                      class: "dropdown-item", method: :patch,
                      data: { confirm: "Are you sure you want to regenerate the SP private key? This will also invalidate the SP certificates." }) do
              %i.fa.fa-key
              Generate SP Private Key
            -# Generate SP Certificate button
            = link_to(institution_generate_saml_cert_path(@institution),
                      class: "dropdown-item", method: :patch,
                      data: { confirm: "Are you sure you want to regenerate the SP certificate? This will overwrite the current SP certificate." }) do
              %i.fa.fa-certificate
              Generate SP Public Certificate

        .btn-group{role: "group"}
          %button.btn.btn-light.dropdown-toggle{type:             "button",
                                                "data-bs-toggle": "dropdown",
                                                "aria-expanded":  false}
            %i.fa.fa-pencil-alt
            Edit
          .dropdown-menu
            %button.dropdown-item.supply-saml-configuration{"data-bs-target":       "#supply-saml-configuration-modal",
                                                            "data-bs-toggle":       "modal",
                                                            type:                   "button",
                                                            "data-institution-key": @institution.key }
              %i.fa.fa-cog
              Supply Configuration&hellip;
            %button.dropdown-item.edit-saml-authentication{"data-bs-target":       "#edit-saml-authentication-modal",
                                                           "data-bs-toggle":       "modal",
                                                           type:                   "button",
                                                           "data-institution-key": @institution.key }
              %i.fa.fa-pencil-alt
              Edit Manually&hellip;

    .clearfix.mb-3

    %dl
      %dt Enabled
      %dd
        = boolean(@institution.saml_auth_enabled, style: :word)
      %dt SSO Federation
      %dd
        - if @institution.sso_federation.present?
          = Institution::SSOFederation.label_for(@institution.sso_federation)
        - else
          None

    .row
      .col-xl-6
        .card.mb-3
          %h5.card-header Service Provider
          .card-body
            %dl
              %dt Entity ID
              %dd{style: "word-break: break-all;"}
                %code= @institution.saml_sp_entity_id
              %dt Assertion Consumer Service URL
              %dd= "#{@institution.scope_url}/auth/saml/callback"
              %dt Metadata URL
              %dd
                - if !@institution.saml_auth_enabled
                  = boolean(false, style: :word, false_value: "SAML IS DISABLED")
                - elsif @institution.saml_sp_entity_id.present?
                  = link_to("#{@institution.scope_url}/auth/saml/metadata",
                              "#{@institution.scope_url}/auth/saml/metadata")
                - else
                  = boolean(false, style: :word, false_value: "NOT AVAILABLE")
              %dt Private Key
              %dd
                - if @institution.saml_sp_private_key.present?
                  - begin
                    - public_cert = OpenSSL::X509::Certificate.new(@institution.saml_sp_public_cert)
                    - private_key = OpenSSL::PKey::RSA.new(@institution.saml_sp_private_key)
                    - if public_cert.check_private_key(private_key)
                      = boolean(true, style: :word, true_value: "VALID")
                    - else
                      - raise "Invalid signature algorithm"
                  - rescue
                    = boolean(false, style: :word, false_value: "INVALID")
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")
              %dt Automatic Certificate Rotation
              %dd
                = boolean(@institution.saml_auto_cert_rotation, style: :word,
                          true_value: "ENABLED", false_value: "DISABLED")
              %dt Public Certificate
              %dd
                - if @institution.saml_sp_public_cert.present?
                  = x509_cert_as_card(cert: @institution.saml_sp_public_cert,
                                      key:  @institution.saml_sp_private_key)
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")
              %dt Next Public Certificate
              %dd
                - if @institution.saml_sp_next_public_cert.present?
                  = x509_cert_as_card(cert: @institution.saml_sp_next_public_cert,
                                      key:  @institution.saml_sp_private_key)
                - elsif @institution.saml_auto_cert_rotation
                  Will be automatically generated closer to expiration of the public certificate.
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")

      .col-xl-6
        .card
          %h5.card-header Identity Provider
          .card-body
            %dl
              %dt Entity ID
              %dd{style: "word-break: break-all;"}
                - if @institution.saml_idp_entity_id.present?
                  %code= @institution.saml_idp_entity_id
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")
              %dt SSO Service Binding
              %dd
                %code= @institution.saml_idp_sso_binding_urn
              %dt SSO Service URL
              %dd
                - case @institution.saml_idp_sso_binding_urn
                - when "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"
                  = link_to(@institution.saml_idp_sso_redirect_service_url,
                            @institution.saml_idp_sso_redirect_service_url)
                - when "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
                  = link_to(@institution.saml_idp_sso_post_service_url,
                            @institution.saml_idp_sso_post_service_url)
                - else
                  Not Set
              %dt Public Signing Certificate
              %dd
                - if @institution.saml_idp_signing_cert.present?
                  = x509_cert_as_card(cert: @institution.saml_idp_signing_cert)
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")
              %dt Public Signing Certificate 2
              %dd
                - if @institution.saml_idp_signing_cert2.present?
                  = x509_cert_as_card(cert: @institution.saml_idp_signing_cert2)
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")
              %dt Public Encryption Certificate
              %dd
                - if @institution.saml_idp_encryption_cert.present?
                  = x509_cert_as_card(cert: @institution.saml_idp_encryption_cert)
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")
              %dt Public Encryption Certificate 2
              %dd
                - if @institution.saml_idp_encryption_cert2.present?
                  = x509_cert_as_card(cert: @institution.saml_idp_encryption_cert2)
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")
              %dt Email Location
              %dd
                - if @institution.saml_email_location.present?
                  = Institution::SAMLEmailLocation.label_for(@institution.saml_email_location)
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")
              - if @institution.saml_email_location == Institution::SAMLEmailLocation::ATTRIBUTE
                %dt Email Attribute
                %dd
                  - if @institution.saml_email_attribute.present?
                    %code= @institution.saml_email_attribute
                  - else
                    = boolean(false, style: :word, false_value: "NOT SET")
              %dt First Name Attribute
              %dd
                - if @institution.saml_first_name_attribute.present?
                  %code= @institution.saml_first_name_attribute
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")
              %dt Last Name Attribute
              %dd
                - if @institution.saml_last_name_attribute.present?
                  %code= @institution.saml_last_name_attribute
                - else
                  = boolean(false, style: :word, false_value: "NOT SET")

  - if @institution.key == "uiuc"
    #shibboleth-tab-pane.tab-pane.fade{role:              "tabpanel",
                                       "aria-labelledby": "shibboleth-tab",
                                       tabindex:          "0"}
      - if policy(@institution).edit_shibboleth_authentication?
        .btn-group.float-end{role: "group"}
          -# Edit button
          %button.btn.btn-light.edit-shibboleth-authentication{"data-bs-target":       "#edit-shibboleth-authentication-modal",
                                                               "data-bs-toggle":       "modal",
                                                               type:                   "button",
                                                               "data-institution-key": @institution.key }
            %i.fa.fa-pencil-alt
            Edit

      .clearfix.mb-3

      %dl
        %dt Enabled
        %dd
          = boolean(@institution.shibboleth_auth_enabled, style: :word)
        %dt Organization DN
        %dd
          - if @institution.shibboleth_org_dn.present?
            %code= @institution.shibboleth_org_dn
          - else
            = boolean(false, style: :word, false_value: "NOT SET")
        %dt Email Attribute
        %dd
          - if @institution.shibboleth_email_attribute.present?
            %code= @institution.shibboleth_email_attribute
          - else
            = boolean(false, style: :word, false_value: "NOT SET")
        %dt Name Attribute
        %dd
          - if @institution.shibboleth_name_attribute.present?
            %code= @institution.shibboleth_name_attribute
          - else
            = boolean(false, style: :word, false_value: "NOT SET")
        %dt Extra Attributes
        %dd
          - if @institution.shibboleth_extra_attributes.present?
            %ul
              - @institution.shibboleth_extra_attributes.sort.each do |attr|
                %li
                  %code= attr
          - else
            = boolean(false, style: :word, false_value: "NONE")

= render partial: "shared/xhr_modal",
         locals: { id: "edit-local-authentication-modal", title: "Edit Local Authentication" }
= render partial: "shared/xhr_modal",
         locals: { id: "edit-saml-authentication-modal", title: "Edit SAML Authentication", size: :xl }
= render partial: "shared/xhr_modal",
         locals: { id: "supply-saml-configuration-modal", title: "Supply SAML Configuration" }
= render partial: "shared/xhr_modal",
         locals: { id: "edit-shibboleth-authentication-modal", title: "Edit Shibboleth Authentication" }
