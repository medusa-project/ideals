- provide(:body_id, "file-formats")
- provide(:title, "File Formats")

%h1 File Formats

%ul.nav.nav-tabs{role: "tablist"}
  %li.nav-item{role: "presentation"}
    %a#accounted-formats-tab.nav-link.active{"data-toggle":   "tab",
                                             href:            "#accounted-formats",
                                             role:            "tab",
                                             "aria-controls": "accounted-formats",
                                             "aria-selected": "true"}
      Accounted Formats
      %span.badge.badge-pill.badge-secondary
        = @accounted_formats.count
  %li.nav-item{role: "presentation"}
    %a#unaccounted-formats-tab.nav-link{"data-toggle":   "tab",
                                        href:            "#unaccounted-formats",
                                        role:            "tab",
                                        "aria-controls": "unaccounted-formats",
                                        "aria-selected": "false"}
      Unaccounted Formats
      %span.badge.badge-pill.badge-secondary
        = @unaccounted_formats.count

.tab-content
  #accounted-formats.tab-pane.fade.show.active{role:              "tabpanel",
                                               "aria-labelledby": "accounted-formats-tab"}
    .alert.alert-light
      = icon_for(:info)
      This is a tabular view of the
      %code config/formats.yml
      file. Formats must be modified in that file.
    %table.table
      %thead
        %tr
          %th Short Name
          %th Full Name
          %th Extensions
          %th Media Types
          %th Files
          %th Previewer
      %tbody
        - @accounted_formats.each do |format|
          %tr
            %td= format[:format].short_name
            %td= format[:format].long_name
            %td
              - if format[:format].extensions.length > 1
                %ul
                  - format[:format].extensions.each do |ext|
                    %li
                      %code= ext
              - else
                %code= format[:format].extensions.first
            %td
              - if format[:format].media_types.length > 1
                %ul
                  - format[:format].media_types.each do |type|
                    %li
                      %code= type
              - else
                %code= format[:format].media_types.first
            %td= number_with_delimiter(format[:count])
            %td= boolean(format[:format].viewer_method)

  #unaccounted-formats.tab-pane.fade{role:              "tabpanel",
                                     "aria-labelledby": "unaccounted-formats-tab"}
    - if @unaccounted_formats.any?
      .alert.alert-light
        = icon_for(:warning)
        Until they are added to the
        %code config/formats.yml
        file, these formats will not be previewable in the item view file
        browser, and some of their characteristics may not appear correctly.

      %table.table
        %thead
          %tr
            %th Extension
            %th Files
        %tbody
          - @unaccounted_formats.each do |format|
            %tr
              %td
                %code= format['ext']
              %td= number_with_delimiter(format['count'])
    - else
      All formats present in the repository are accounted for.
