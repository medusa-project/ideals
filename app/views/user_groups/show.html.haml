- provide :body_id, "show_user_group"
- provide :title, @user_group.name

- can_edit             = policy(@user_group).edit?
- show_uiuc_dimensions = @user_group.institution&.key == "uiuc" || (!@user_group.institution && current_institution.key == "uiuc")

.btn-group.float-end{role: "group"}
  - if can_edit
    -# Edit button
    %button.btn.btn-light.edit-user-group{"data-bs-target":     "#edit-user-group-modal",
                                          "data-bs-toggle":     "modal",
                                          "data-user-group-id": @user_group.id,
                                          type:                 "button"}
      %i.fa.fa-pencil-alt
      Edit
  - if policy(@user_group).destroy?
    -# Delete button
    = link_to(user_group_path(@user_group), class: "btn btn-danger",
                                            role: "button",
                                            method: :delete,
                                            data: { confirm: "Are you sure you want to delete this user group?" }) do
      %i.fa.fa-trash
      Delete

%h1
  = @user_group.name
  - unless @user_group.institution
    %small
      %span.badge.bg-info GLOBAL

- if @user_group.defines_institution
  .alert.alert-light
    = icon_for(:info)
    This group defines all of the members of
    = "#{current_institution.name},"
    including faculty, staff, and students. When an item is submitted with the
    option for institution-only access privileges, an embargo is attached to it
    allowing access only to members of this group.

%ul.nav.nav-tabs{role: "tablist"}
  %li.nav-item{role: "presentation"}
    %button#membership-tab.nav-link.active{"data-bs-toggle": "tab",
                                           "data-bs-target": "#membership",
                                           role:             "tab",
                                           type:             "button",
                                           "aria-controls":  "membership",
                                           "aria-selected":  "true"} Membership
  %li.nav-item{role: "presentation"}
    %button#usage-tab.nav-link{"data-bs-toggle": "tab",
                               "data-bs-target": "#usage",
                               role:             "tab",
                               type:             "button",
                               "aria-controls":  "usage",
                               "aria-selected":  "true"} Usage

.tab-content
  #membership.tab-pane.fade.show.active{role:              "tabpanel",
                                        "aria-labelledby": "membership-tab"}
    .row.mb-3
      .col-sm-12
        .card
          .card-body
            - if can_edit
              .float-end
                %button.btn.btn-light.btn-sm.edit-local-users{"data-bs-target":     "#edit-local-users-modal",
                                                              "data-bs-toggle":     "modal",
                                                              "data-user-group-id": @user_group.id,
                                                              type:                 "button"}
                  %i.fa.fa-pencil-alt
                  Edit
            %h4.card-title Local Users
            - if @local_users.any?
              - if @user_group.institution_id
                %ul
                  - @local_users.each do |user|
                    %li= link_to(user.name, user.becomes(User))
              - else
                %table.table
                  - @local_users.each do |user|
                    %tr
                      %td
                        = link_to(user.becomes(User)) do
                          = icon_for(user)
                          = user.name
                      %td
                        = link_to(user.institution) do
                          = icon_for(user.institution)
                          = user.institution.name
            - else
              %p None

    .alert.alert-light
      = icon_for(:info)
      The aspects below are obtained from sources stored outside the system.
      The system can check a whether a particular user belongs to the group
      based on these aspects, but it cannot generate a definitive list of
      users who belong to it.

    .row.mb-3
      .col-sm-6
        .card
          .card-body
            - if can_edit
              .float-end
                %button.btn.btn-light.btn-sm.edit-hosts{"data-bs-target":     "#edit-hosts-modal",
                                                        "data-bs-toggle":     "modal",
                                                        "data-user-group-id": @user_group.id,
                                                        type:                 "button"}
                  %i.fa.fa-pencil-alt
                  Edit
            %h4.card-title Hosts
            - if @hosts.any?
              %ul
                - @hosts.each do |group|
                  %li
                    %code= group.pattern
            - else
              %p None
      .col-sm-6
        .card
          .card-body
            - if can_edit
              .float-end
                %button.btn.btn-light.btn-sm.edit-email-patterns{"data-bs-target":     "#edit-email-patterns-modal",
                                                                 "data-bs-toggle":     "modal",
                                                                 "data-user-group-id": @user_group.id,
                                                                 type:                 "button"}
                  %i.fa.fa-pencil-alt
                  Edit
            %h4.card-title Email Address Patterns
            - if @email_patterns.any?
              %ul
                - @email_patterns.each do |pattern|
                  %li
                    %code= pattern.pattern
            - else
              %p None

    .row.mb-3
      .col-sm-6
        - if show_uiuc_dimensions
          .card
            .card-body
              - if can_edit
                .float-end
                  %button.btn.btn-light.btn-sm.edit-netid-users{"data-bs-target":     "#edit-netid-users-modal",
                                                                "data-bs-toggle":     "modal",
                                                                "data-user-group-id": @user_group.id,
                                                                type:                 "button"}
                    %i.fa.fa-pencil-alt
                    Edit
              %h4.card-title
                NetID Users
                %span.badge.bg-primary UIUC only
              - if @netid_users.any?
                %ul
                  - @netid_users.each do |user|
                    %li
                      - if user.name != user.netid
                        = link_to("#{user.name} (#{user.netid})", user.becomes(User))
                      - else
                        = link_to(user.netid, user.becomes(User))
              - else
                %p None
      .col-sm-6
        - if show_uiuc_dimensions
          .card
            .card-body
              - if can_edit
                .float-end
                  %button.btn.btn-light.btn-sm.edit-departments{"data-bs-target":     "#edit-departments-modal",
                                                                "data-bs-toggle":     "modal",
                                                                "data-user-group-id": @user_group.id,
                                                                type:                 "button"}
                    %i.fa.fa-pencil-alt
                    Edit
              %h4.card-title
                Departments
                %span.badge.bg-primary UIUC only
              - if @departments.any?
                %ul
                  - @departments.each do |department|
                    %li= department.name
              - else
                %p None
    .row.mb-3
      .col-sm-6
        - if show_uiuc_dimensions
          .card
            .card-body
              - if can_edit
                .float-end
                  %button.btn.btn-light.btn-sm.edit-affiliations{"data-bs-target":     "#edit-affiliations-modal",
                                                                 "data-bs-toggle":     "modal",
                                                                 "data-user-group-id": @user_group.id,
                                                                 type:                 "button"}
                    %i.fa.fa-pencil-alt
                    Edit
              %h4.card-title
                Affiliations
                %span.badge.bg-primary UIUC only
              - if @affiliations.any?
                %ul
                  - @affiliations.each do |affiliation|
                    %li= affiliation.name
              - else
                %p None
      .col-sm-6
        - if show_uiuc_dimensions
          .card
            .card-body
              - if can_edit
                .float-end
                  %button.btn.btn-light.btn-sm.edit-ad-groups{"data-bs-target":     "#edit-ad-groups-modal",
                                                              "data-bs-toggle":     "modal",
                                                              "data-user-group-id": @user_group.id,
                                                              type:                 "button"}
                    %i.fa.fa-pencil-alt
                    Edit
              %h4.card-title
                AD Groups
                %span.badge.bg-primary UIUC only
              - if @ad_groups.any?
                %ul
                  - @ad_groups.each do |group|
                    %li= group.name
              - else
                %p None

  #usage.tab-pane.fade{role: "tabpanel",
                       "aria-labelledby": "usage-tab"}
    .row
      .col-md-6
        .card
          .card-body
            %h4.card-title Units
            %h5 Allowed to administer
            - if @user_group.unit_administrator_groups.any?
              %ul
                - @user_group.unit_administrator_groups.each do |group|
                  %li= link_to(group.unit.title, group.unit)
            - else
              None
      .col-md-6
        .card
          .card-body
            %h4.card-title Collections
            %h5 Allowed to administer
            - if @user_group.collection_administrator_groups.any?
              %ul
                - @user_group.collection_administrator_groups.each do |group|
                  %li= link_to(group.collection.title, group.collection)
            - else
              None

            %h5 Allowed to submit
            - if @user_group.submitter_groups.any?
              %ul
                - @user_group.submitter_groups.each do |group|
                  %li= link_to(group.collection.title, group.collection)
            - else
              None
    .row
      .col-md-6
        .card
          .card-body
            %h4.card-title Items
            %h5 Allowed to download files
            - if @user_group.bitstream_authorizations.any?
              %ul
                - @user_group.bitstream_authorizations.each do |auth|
                  %li= link_to(auth.item.title, auth.item)
            - else
              None

= render partial: "shared/ajax_modal",
         locals: { id: "edit-user-group-modal", title: "Edit User Group" }
= render partial: "shared/ajax_modal",
         locals: { id: "edit-ad-groups-modal", title: "Edit AD Groups" }
= render partial: "shared/ajax_modal",
         locals: { id: "edit-affiliations-modal", title: "Edit Affiliations" }
= render partial: "shared/ajax_modal",
         locals: { id: "edit-departments-modal", title: "Edit Departments" }
= render partial: "shared/ajax_modal",
         locals: { id: "edit-local-users-modal", size: :lg, title: "Edit Local Users" }
= render partial: "shared/ajax_modal",
         locals: { id: "edit-hosts-modal", title: "Edit Hosts" }
= render partial: "shared/ajax_modal",
         locals: { id: "edit-netid-users-modal", title: "Edit NetID Users" }
= render partial: "shared/ajax_modal",
         locals: { id: "edit-email-patterns-modal", title: "Edit Email Address Patterns" }
