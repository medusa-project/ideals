-# frozen_string_literal: true
-#
-# Requires the following locals:
-#
-# item [Item]
-#

#files-messages.error-messages
  -# populated via ajax by shared/_validation_messages.js.erb

-# Read in JavaScript to determine where to upload files to.
= hidden_field_tag "item_bitstreams_uri", item_bitstreams_url(item)

-# This table is modified by IDEALS.ItemFileUploader.addFile() (JavaScript).
-# Its structure must be kept in sync with that code.
%table.table.table-sm.files
  %tbody
    - item.bitstreams.order(:original_filename).each do |bitstream|
      %tr{"data-uri":      item_bitstream_path(item, bitstream),
          "data-filename": bitstream.original_filename}
        %td
          %i.fa.fa-check.text-success
        %td= bitstream.original_filename
        %td= number_to_human_size(bitstream.length)
        %td
          -# progress bar injected here
        %td
          - if controller_name == "items" && action_name == "edit_bitstreams" && |
                bitstream.exists_in_staging && !bitstream.submitted_for_ingest && |
                bitstream.medusa_uuid.blank? |
            %button.btn.btn-sm.btn-light.ingest
              %i.fa.fa-upload
              Ingest Into Medusa
        %td
          - if bitstream.exists_in_staging && !bitstream.submitted_for_ingest
            %button.btn.btn-sm.btn-danger.remove
              %i.fa.fa-minus
              Remove

-# This input is hidden via CSS. JavaScript sends #file-dropzone click events
-# to it in order to open a file selection dialog.
%input#file-chooser{type: "file", multiple: true}

#file-drop-zone.bg-light
  %div.mb-3
    %i.fa.fa-upload
    Attach files (not folders) by dropping them here or selecting them.
  %div
    %small Filenames must be unique, and directory structure is not preserved.
