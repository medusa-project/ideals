- provide :body_id, "list_invitees"
- provide :title, "Invitees"

-if policy(User).invite?
  .btn-group.float-end{role: "group"}
    -# Invite button
    %button.btn.btn-light{"data-bs-target": "#invite-user-modal",
                          "data-bs-toggle": "modal",
                          type:             "button"}
      %i.fa.fa-plus
      Invite User

%h1
  Invitees
  %small
    in
    = current_institution.name

.card.mb-3
  .card-body
    = form_tag invitees_path, method: :get, class: "form-inline" do
      .row.mb-3
        .col
          = label_tag nil, "Email", class: "form-label"
          = filter_field
        .col
          = label_tag nil, "Approval State", class: "form-label"
          = select_tag "approval_state",
                       options_for_select(Invitee::ApprovalState::all.sort.map{ |s| [s.capitalize, s] },
                                          params[:approval_state] || Invitee::ApprovalState::PENDING),
                       class: "form-select"
      = button_tag "Clear", type: "reset", class: "btn btn-outline-secondary"
      = submit_tag "Filter", name: "", class: "btn btn-primary"

= render partial: "invitees",
         locals: { count:            @count,
                   current_page:     @current_page,
                   invitees:         @invitees,
                   permitted_params: @permitted_params,
                   window:           @window }
= render partial: "add_modal", locals: { invitee: @new_invitee }
