= provide :body_id, "show_unit"

= render partial: "show_button_group"

%h1
  =icon_for(@resource)
  =@resource.title

%ul.nav.nav-tabs{role: "tablist"}
  %li.nav-item
    %a#units-tab.nav-link.active{"aria-controls": "units",
                                 "aria-selected": "false",
                                 "data-toggle": "tab",
                                 href: "#units",
                                 role: "tab"}
      = icon_for(Unit)
      Sub-Units
  %li.nav-item
    %a#collections-tab.nav-link{"aria-controls": "collections",
                                "aria-selected": "false",
                                "data-toggle": "tab",
                                href: "#collections",
                                role: "tab"}
      = icon_for(Collection)
      Collections
  %li.nav-item
    %a#items-tab.nav-link{href: "#items-tab-content",
                          "data-toggle": "tab",
                          role: "tab",
                          "aria-controls": "items-tab-content",
                          "aria-selected": "true"}
      = icon_for(Item)
      Items
  - if policy(@resource).edit?
    %li.nav-item
      %a#access-tab.nav-link{"aria-controls": "access",
                             "aria-selected": "false",
                             "data-toggle": "tab",
                             href: "#access",
                             role: "tab"}
        %i.fa.fa-users
        Access


.tab-content
  #units.tab-pane.fade.show.active{"aria-labelledby": "units-tab",
                                   role: "tabpanel"}
    - if @subunits.any?
      = resource_list(@subunits)
    - else
      %p This unit does not contain any sub-units.

  #collections.tab-pane.fade{"aria-labelledby": "collections-tab",
                             role: "tabpanel"}
    -if policy(Collection).new?
      .btn-group.float-right{role: "group"}
        / Add Collection button
        %button.btn.btn-light{"data-target": "#add-collection-modal",
                              "data-toggle": "modal", type: "button"}
          %i.fa.fa-plus
          Add Collection
    - if @collections.any?
      = resource_list(@collections)
    - else
      %p This unit does not contain any collections.

  #items-tab-content.tab-pane.fade.show{role: "tabpanel",
                                        "aria-labelledby": "items-tab"}
    - if @items.count.positive?
      = form_tag(unit_path(@resource), method: :get, class: "filter") do
        .row.justify-content-between
          .col-4
            .input-group.mb-3.filter-field
              = hidden_field_tag("fq[]", "#{Item::IndexFields::UNIT_TITLES}:#{@resource.title}")
              = filter_field(icon: "fa fa-filter", submit_text: "Filter")
          .col-4
            .input-group
              = sort_menu(MetadataProfile.default)
      = render partial: "items/listing"
    - else
      This unit does not contain any items.

  - if policy(@resource).edit?
    #access.tab-pane.fade{"aria-labelledby": "access-tab",
                          role: "tabpanel"}
      %dl
        %dt Direct Administrators
        %dd
          - if @resource.administering_users.any?
            %ul
              - @resource.administering_users.each do |user|
                %li= link_to(raw("#{user.name}#{user == @resource.primary_administrator ? " <span class=\"badge badge-primary\">PRIMARY</span>" : ""}"),
                "mailto:#{user.email}")
          - else
            None
        %dt Effective Administrators (including administrators of parent units)
        %dd
          - admins = @resource.all_administrators
          - if admins.any?
            %ul
              - admins.each do |user|
                %li= link_to(user.name, "mailto:#{user.email}")
          - else
            None

= render partial: "collections/add_modal",
         locals: { primary_unit: @resource }
= render partial: "shared/ajax_modal",
         locals: { id: "edit-unit-modal", title: "Edit Unit" }
